[SPI0, bus/spi]
@ = 0x0FEB00000, 0x00010000

+ = SPI

CTRLR0 = 0x0000 ; Control Register 0
> 25, 1, LBK ; Loop back mode select.
= 0, NORMAL
= 1, LOOPBACK

> 23, 2, SOI ; SS_N output inverted.
= 0, NOT_INVERTED
= 1, INVERTED

> 22, 1, SM ; SCLK_IN is masked by SS_N or not.
= 0, MASKED
= 1, NOT_MASKED

> 21, 1, MTM ; Valid when frame format is set to National Semiconductors Microwire.
= 0, NON_SEQUENTIAL
= 1, SEQUENTIAL

> 20, 1, OPM ; Master and slave mode select.
= 0, MASTER
= 1, SLAVE

> 18, 2, XFM ; Transmit and receive mode select.
= 0, TX_RX
= 1, TX_ONLY
= 2, RX_ONLY
= 3, RESERVED

> 16, 2, FRF
= 0, MOTOROLA_SPI
= 1, TI_SSP
= 2, NATSEMI_MICROWIRE
= 3, RESERVED

> 14, 2, RSD ; When SPI is configured as a master, if the rxd data cannot be sampled by the sclk_out edge at the right time, this register should be configured to define the number of the spi_clk cycles after the active sclk_out edge to sample rxd data later when SPI works at high frequency.
= 0, NO_DELAY
= 1, 1CYCLE
= 2, 2CYCLES
= 3, 3CYCLES

> 13, 1, BHT ; Valid when data frame size is 8bit.
= 0, APB_16BIT_SPI_8BIT
= 1, APB_8BIT_SPI_8BIT

> 12, 1, FBM
= 0, MSB
= 1, LSB

> 11, 1, EM ; Serial endian mode can be configured by this bit. APB endian mode is always little endian.
= 0, LITTLE
= 1, BIG

> 10, 1, SSD ; Valid when the frame format is set to Motorola SPI and SPI used as a master.
= 0, PERIOD_HALF_SCLK_OUT
= 1, PERIOD_ONE_SCLK_OUT

> 8, 2, CSM ; Valid when the frame format is set to Motorola SPI and SPI used as a master.
= 0, LOW
= 1, HIGH_FOR_HALF_SCLK_OUT
= 2, HIGH_FOR_ONE_SCLK_OUT
= 3, RESERVED

> 7, 1, SCPOL ; Valid when the frame format is set to Motorola SPI.
= 0, LOW
= 1, HIGH

> 6, 1, SCPH ; Valid when the frame format is set to Motorola SPI.
= 0, MIDDLE
= 1, START

> 2, 4, CFS ; Selects the length of the control word for the Microwire frame format.
= 3, 4BIT
= 4, 5BIT
= 5, 6BIT
= 6, 7BIT
= 7, 8BIT
= 8, 9BIT
= 9, 10BIT
= 10, 11BIT
= 11, 12BIT
= 12, 13BIT
= 13, 14BIT
= 14, 15BIT
= 15, 16BIT

> 0, 2, DFS ; Selects the data frame length.
= 0, 4BIT
= 1, 8BIT
= 2, 16BIT
= 3, RESERVED

CTRLR1 = 0x0004 ; Control Register 1
> 0, 32, NDM ; When Transfer Mode is receive only, this register field sets the number of data frames to be continuously received by the SPI. The SPI continues to receive serial data until the number of data frames received is equal to this register value plus 1, which enables you to receive up to 4GB of data in a continuous transfer.

ENR = 0x0008 ; SPI Enable Register
> 0, 1, ENR ; Enables and disables all SPI operations. Transmit and receive FIFO buffers are cleared when the device is disabled.
= 0, DISABLE
= 1, ENABLE

SER = 0x000C ; Slave Enable Register
> 0, 2, SER ; Slave enable register. The register enable the individual slave select output lines, 2 slave-select output pins are available. This register is valid only when SPI is configured as a master device.

BAUDR = 0x0010 ; Baud Rate Select
> 0, 16, BAUDR ; SPI Clock Divider. This register is valid only when the SPI is configured as a master device. The LSB for this field is always set to 0 and is unaffected by a write operation, which ensures an even value is held in this register. If the value is 0, the serial output clock (sclk_out) is disabled. The frequency of the sclk_out is derived from the following equation: Fsclk_out = Fspi_clk/ SCKDV Where SCKDV is any even value between 2 and 65534. For example: for Fspi_clk = 3.6864MHz and SCKDV =2 Fsclk_out = 3.6864/2= 1.8432MHz

TXFTLR = 0x0014 ; Transmit FIFO Threshold Level
> 0, 6, XFTLR ; When the number of transmit FIFO entries is less than or equal to this value, the transmit FIFO empty interrupt is triggered.

RXFTLR = 0x0018 ; Receive FIFO Threshold Level
> 0, 6, RXFTLR ; When the number of receive FIFO entries is greater than or equal to this value + 1, the receive FIFO full interrupt is triggered.

TXFLR = 0x001C, RO ; Transmit FIFO Level
> 0, 7, TXFLR ; Contains the number of valid data entries in the transmit FIFO.

RXFLR = 0x0020, RO ; Receive FIFO Level
> 0, 7, RXFLR ; Contains the number of valid data entries in the receive FIFO.

SR = 0x0024, RO ; SPI Status
> 6, 1, SSI
= 0, LOW
= 1, HIGH

> 5, 1, STB
= 0, NOT_BUSY
= 1, BUSY

> 4, 1, RFF
= 0, NOT_FULL
= 1, FULL

> 3, 1, RFE
= 0, NOT_EMPTY
= 1, EMPTY

> 2, 1, TFE
= 0, NOT_EMPTY
= 1, EMPTY

> 1, 1, TFF
= 0, NOT_FULL
= 1, FULL

> 0, 1, BSF ; When set, indicates that a serial transfer is in progress; when cleared, indicates that the SPI is idle or disabled.
= 0, IDLE_OR_DISABLED
= 1, ACTIVE

IPR = 0x0028 ; Interrupt Polarity
> 0, 1, IPR ; Interrupt Polarity Register.
= 0, HIGH
= 1, LOW

IMR = 0x002C ; Interrupt Mask
> 7, 1, TXFIM
= 0, MASKED
= 1, NOT_MASKED

> 6, 1, SSPIM
= 0, MASKED
= 1, NOT_MASKED

> 5, 1, TOIM
= 0, MASKED
= 1, NOT_MASKED

> 4, 1, RFFIM
= 0, MASKED
= 1, NOT_MASKED

> 3, 1, RFOIM
= 0, MASKED
= 1, NOT_MASKED

> 2, 1, RFUIM
= 0, MASKED
= 1, NOT_MASKED

> 1, 1, TFOIM
= 0, MASKED
= 1, NOT_MASKED

> 0, 1, TFEIM
= 0, MASKED
= 1, NOT_MASKED

# TODO: Strange that only most bits are RO
ISR = 0x0030 ; Interrupt Status
> 7, 1, TXFIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 6, 1, SSPIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 5, 1, TOIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 4, 1, RFFIS, RO
= 0, NOT_ACTIVE
= 1, FULL

> 3, 1, RFOIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 2, 1, RFUIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 1, 1, TFOIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 0, 1, TFEIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

# TODO: Strange that only most bits are RO
RISR = 0x0034 ; Raw Interrupt Status
> 7, 1, TXFRIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 6, 1, SSPRIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 5, 1, TORIS
= 0, NOT_ACTIVE
= 1, ACTIVE

> 4, 1, RFFRIS, RO
= 0, NOT_ACTIVE
= 1, FULL

> 3, 1, RFORIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 2, 1, RFURIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 1, 1, TFORIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

> 0, 1, TFERIS, RO
= 0, NOT_ACTIVE
= 1, ACTIVE

ICR = 0x0038, WO, W1C ; Interrupt Clear
> 6, 1, CTXFI ; Write 1 to Clear tx finish Interrupt.
> 5, 1, CSSPI ; Write 1 to Clear ss_in_n posedge Interrupt.
> 4, 1, CTOI ; Write 1 to Clear Timeout Interrupt.
> 3, 1, CTFOI ; Write 1 to Clear Transmit FIFO Overflow Interrupt.
> 2, 1, CRFOI ; Write 1 to Clear Receive FIFO Overflow Interrupt.
> 1, 1, CRFUI ; Write 1 to Clear Receive FIFO Underflow Interrupt.
> 0, 1, CCI ; Write 1 to Clear Combined Interrupt.

DMACR = 0x003C ; DMA Control
> 1, 1, TDE
= 0, DISABLED
= 1, ENABLED

> 0, 1, RDE
= 0, DISABLED
= 1, ENABLED

DMATDLR = 0x0040 ; DMA Transmit Data Level
> 0, 6, TDL ; This bit field controls the level at which a DMA request is made by the transmit logic. It is equal to the watermark level; that is, the dma_tx_req signal is generated when the number of valid data entries in the transmit FIFO is equal to or below this field value, and transmit DMA is enabled (DMACR[1] = 1).

DMARDLR = 0x0044 ; DMA Receive Data Level
> 0, 6, RDL ; This bit field controls the level at which a DMA request is made by the receive logic. The watermark level = DMARDL+1; that is, dma_rx_req is generated when the number of valid data entries in the receive FIFO is equal to or above this field value + 1, and receive DMA is enabled(DMACR[0]=1).

VERSION = 0x0048, RO ; IP version
> 0, 32, VERSION ; IP version

TIMEOUT = 0x004C ; Timeout control register
> 16, 1, TOE ; Timeout enable.
= 0, DISABLED ; Timeout counter is inactive.
= 1, ENABLED ; Timeout counter will be active after the first rising edge of sclk_in.

> 0, 16, TOV ; Timeout threshold value. If sclk_in keep inactive for a threshold time, timeout interrupt will be triggered. The timeout threshold time is TOV*pclk_perid*16.

BYPASS = 0x0050 ; BYPASS control register
> 4, 1, TXCP ; TX clock polarity.This bit is only valid in bypass mode.
= 0, RAW
= 1, INVERTED

> 3, 1, RXCP ; RX clock polarity.This bit is only valid in bypass mode.
= 0, RAW
= 1, INVERTED

> 2, 1, END ; Endian mode.This bit is only valid in bypass mode.
= 0, LITTLE_ENDIAN
= 1, BIG_ENDIAN

> 1, 1, FBM ; First bit mode.This bit is only valid in bypass mode.
= 0, LSB
= 1, MSB

> 0, 1, BYEN ; Bypass enable.
= 0, NORMAL
= 1, BYPASS ; SPI serial/parallel convert logic is drive by SCLK.

TXDR = 0x0400, WO ; Transmit FIFO Data
> 0, 16, TXDR ; When it is written to, data are moved into the transmit FIFO.

RXDR = 0x0800, RO ; Receive FIFO Data
> 0, 16, RXDR ; When the register is read, data in the receive FIFO is accessed.

