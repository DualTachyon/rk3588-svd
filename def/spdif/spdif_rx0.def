[SPDIF_RX0, SPDIF]
@ = 0x0FDE08000, 0x00008000

VERSION = 0x0000 ; Version Register
> 0, 32, VER ; Version of SPDIF_RX

CFGR = 0x0004 ; Transfer Configuration Register
> 1, 1, TWAD ;
= 0, ONLY_AUDIO ; Only audio data transmitted to FIFO.
= 1, ALL_DATA ; Block start, channel number and VUCP transmitted with audio data to FIFO.

> 0, 1, EN
= 0, DISABLE
= 1, ENABLE

CLR = 0x0008 ; Clear Register
> 0, 1, RXSC, W1C ; This is a software self-cleared bit. Write 1'b1 to clear all receive logic.
= 1, CLEAR

CDR = 0x000C ; Clock And Data Recovery Register
> 24, 1, JITTRSH ; CDR jitter threshold. It is valid only when BYPASS is 1'b0.

> 16, 8, MIDRGE ; CDR jitter middle range. It is valid only when BYPASS is 1'b0.

> 9, 2, CS, RO ; CDR state
= 0, IDLE ; CDR is idle and waits for rising edge of SPDIF_RX input bitstream.
= 1, DETECT
= 2, MEASUREMENT
= 3, SYNCHRONIZATION

> 7, 2, JITST, RO ; CDR jitter status. It is valid only when BYPASS is 1'b0.
= 1, LOW
= 2, HIGH
= 3, NORMAL

> 6, 1, FULL, RO ; CDR FIFO full status.
= 0, NOT_FULL
= 1, FULL

> 5, 1, EMPTY, RO ; CDR FIFO empty status.
= 0, NOT_EMPTY
= 1, EMPTY

> 2, 3, AVGWIN ; Average the non-jitter recovered clk from bitstream at a period of AVGWIN time.

> 1, 1, AVGSEL ; Select if the min or average number of cycles from the calculation of SPDIF_RX input bitstream pulse width.
= 0, MINIMUM ; Minimum number of cycles
= 1, AVERAGE ; Average number of cycles, that is (max+min)/4.

> 0, 1, BYPASS ; Write 1'b1 to enable CDR non-jitter bypass mode. It's recommended that this bit set to 1'b1. Please ensure that this bit is set to 1'b1 before starting receiving data.

CDRST = 0x0010 ; Clock And Data Recovery Status Register
> 16, 16, NOSTRTHR ; The threshold counter determines the latency between input bitstream idle and exit synchronous status. Make sure that this value is large than 16'h03ff. 15:8 RO 0x00 MAXCNT The value indicates the number of reference clock cycles to oversample the maximum pulse width of bitstream. 7:0 RO 0xff MINCNT The value indicates the number of reference clock cycles to oversample the minimum pulse width of bitstream.

DMACR = 0x0014 ; DMA Control Register
> 5, 1, RDE
= 0, DISABLED
= 1, ENABLED

> 0, 5, RDL ; This bit field controls the level at which a DMA request is made by the receive logic. The watermark level = DMARDL+1. That is, dma_rx_req is generated when the number of valid data entries in the sample date buffer is equal to or above this field value + 1.

FIFOCTRL = 0x0018, RO ; FIFO Control Register
> 8, 6, RFL, RO ; Contains the number of valid data entries in the receive FIFO.

> 0, 5, RFT ; When the number of receive FIFO entries is more than or equal to this threshold plus 1, the receive FIFO full interrupt is triggered.

INTEN = 0x001C ; Interrupt Enable Register
> 10, 1, UBCIE ; If enabled, an interrupt will generate if current user bit is different from previous one.
= 0, DISABLE
= 1, ENABLE

> 9, 1, ESYNCIE ; If enabled, an interrupt will generate when entering synchronous state.
= 0, DISABLE
= 1, ENABLE

> 8, 1, BTEIE ; When enabled, an interrupt will generate when the block receive is finished if the channel conveys linear PCM or when the repetition period is reached if the channel conveys non-linear PCM.
= 0, DISABLE
= 1, ENABLE

> 7, 1, NSYNCIE ; If enabled, an interrupt will generate if CDR change from synchronization state to idle state.
= 0, DISABLE
= 1, ENABLE

> 6, 1, BMDEIE ; If enabled, an interrupt will generate if a bi-phase mark decoding error has occurred.
= 0, DISABLE
= 1, ENABLE

> 5, 1, RXOIE ; If enabled, an interrupt will generate if CDR FIFO is overrun.
= 0, DISABLE
= 1, ENABLE

> 4, 1, RXFIE ; If enabled, an interrupt will generate if CDR FIFO is full.
= 0, DISABLE
= 1, ENABLE

> 3, 1, NPSPIE ; If enabled, an interrupt will generate if non-liner PCM sync word is received.
= 0, DISABLE
= 1, ENABLE

> 2, 1, NVLDIE ; If enabled, an interrupt will generate if validity bit received from bitstream is 1'b1.
= 0, DISABLE
= 1, ENABLE

> 1, 1, CSCIE ; If enabled, an interrupt will generate if current channel status bit is different from previous one.
= 0, DISABLE
= 1, ENABLE

> 0, 1, PEIE ; If enabled, an interrupt will generate if a parity error has occurred.
= 0, DISABLE
= 1, ENABLE

INTMASK = 0x0020 ; Interrupt Mask Register
> 10, 1, UBCIMSK
= 0, UNMASK
= 1, MASK

> 9, 1, ESYNCIMSK
= 0, UNMASK
= 1, MASK

> 8, 1, BTEIMSK
= 0, UNMASK
= 1, MASK

> 7, 1, NSYNCIMSK
= 0, UNMASK
= 1, MASK

> 6, 1, BMDEIMSK
= 0, UNMASK
= 1, MASK

> 5, 1, RXOIMSK
= 0, UNMASK
= 1, MASK

> 4, 1, RXFIMSK
= 0, UNMASK
= 1, MASK

> 3, 1, NPSPIMSK
= 0, UNMASK
= 1, MASK

> 2, 1, NVLDIMSK
= 0, UNMASK
= 1, MASK

> 1, 1, CSCIMSK
= 0, UNMASK
= 1, MASK

> 0, 1, PEIMSK
= 0, UNMASK
= 1, MASK

INTSR = 0x0024, RO ; Interrupt Status Register
> 10, 1, UBCISR
= 0, INACTIVE
= 1, ACTIVE

> 9, 1, ESYNCISR
= 0, INACTIVE
= 1, ACTIVE

> 8, 1, BTEISR
= 0, INACTIVE
= 1, ACTIVE

> 7, 1, NSYNCISR
= 0, INACTIVE
= 1, ACTIVE

> 6, 1, BMDEISR
= 0, INACTIVE
= 1, ACTIVE

> 5, 1, RXOIS
= 0, INACTIVE
= 1, ACTIVE

> 4, 1, RXFIS
= 0, INACTIVE
= 1, ACTIVE

> 3, 1, NPSPIS
= 0, INACTIVE
= 1, ACTIVE

> 2, 1, NVLDIS
= 0, INACTIVE
= 1, ACTIVE

> 1, 1, CSCIS
= 0, INACTIVE
= 1, ACTIVE

> 0, 1, PEIS
= 0, INACTIVE
= 1, Active

INTCLR = 0x0028 ; Interrupt Clear Register
> 10, 1, UBCICLR, W1C ; Write 1'b1 to clear user bit change interrupt.
= 1, CLEAR

> 9, 1, ESYNCICLR, W1C ; Write 1'b1 to clear entering synchronous state interrupt.
= 1, CLEAR

> 8, 1, BTEICLR, W1C ; Write 1'b1 to clear block transfer/repetition period end interrupt.
= 1, CLEAR

> 7, 1, NSYNCICLR, W1C ; Write 1'b1 to clear CDR not synchronization interrupt.
= 1, CLEAR

> 6, 1, BMDEICLR, W1C ; Write 1'b1 to clear bi-phase mark decoding interrupt.
= 1, CLEAR

> 5, 1, RXOICLR, W1C ; Write 1'b1 to clear receive overrun interrupt.
= 1, CLEAR

> 4, 1, RXFICLR, W1C ; Write 1'b1 to clear receive full interrupt.
= 1, CLEAR

> 3, 1, NPSPICLR, W1C ; Write 1'b1 to clear non-liner PCM sync word received interrupt.
= 1, CLEAR

> 2, 1, NVLDICLR, W1C ; Write 1'b1 to clear validity bit received interrupt.
= 1, CLEAR

> 1, 1, CSCICLR, W1C ; Write 1'b1 to clear channel status change interrupt.
= 1, CLEAR

> 0, 1, PEICLR, W1C ; Write 1'b1 to clear parity error interrupt.
= 1, CLEAR

SMPDR = 0x002C, RO ; Sample Data Register

USRDR$ = 0x0030, RO, @12 ; User Data Register $
> 16, 16, USR_SUB_1 ; User data bit for subframe 1
> 0, 16, USR_SUB_0 ; User data bit for subframe 0

CHNSR$ = 0x0060, RO, @12 ; Channel Status Register $
> 16, 16, CHNSR_SUB_1 ; Channel status bit for subframe 1
> 0, 16, CHNSR_SUB_0 ; Channel status bit for subframe 0

BURTSINFO = 0x0100 ; Channel Burst Info Register
> 16, 16, PD ; Preamble Pd for non-linear PCM, indicating the length of burst payload in unit of bytes or bits.

> 13, 3, BSNUM ; This field indicates the bitstream number. Usually the bitstream number is 0.

> 8, 5, DATAINFO, RO ; This field gives the data-type-dependent info. 7 RO 0x0 ERRFLAG
= 0, NO_ERROR ; Indicates a valid burst-payload.
= 1, ERROR ; Indicates that the burst-payload may contain errors.

> 0, 7, DATATYPE, RO
= 0x00, NULL_DATA
= 0x01, AC_3_DATA
= 0x03, PAUSE_DATA
= 0x04, MPEG_1_LAYER_1_DATA
= 0x05, MPEG_1_LAYER_2_OR_3_DATA_OR_MPEG_2_WITHOUT_EXTENSION
= 0x06, MPEG_2_DATA_WITH_EXTENSION
= 0x07, MPEG_2_AAC
= 0x08, MPEG_2_LAYER_1_LOW_SAMPLING_FREQUENCY
= 0x09, MPEG_2_LAYER_2_LOW_SAMPLING_FREQUENCY
= 0x0A, MPEG_2_LAYER_3_LOW_SAMPLING_FREQUENCY
= 0x0B, DTS_TYPE_I
= 0x0C, DTS_TYPE_II
= 0x0D, DTS_TYPE_III
= 0x0E, ATRAC
= 0x0F, ATRAC_2_3
= 0x10, ATRAC_X
= 0x11, DTS_TYPE_IV
= 0x12, WMA_PROFESSIONAL_TYPE_I
= 0x32, WMA_PROFESSIONAL_TYPE_II
= 0x52, WMA_PROFESSIONAL_TYPE_III
= 0x72, WMA_PROFESSIONAL_TYPE_IV
= 0x13, MPEG_2_AAC_LOW_SAMPLING_FREQUENCY_0x13
= 0x33, MPEG_2_AAC_LOW_SAMPLING_FREQUENCY_0x33
= 0x53, MPEG_2_AAC_LOW_SAMPLING_FREQUENCY_0x53
= 0x73, MPEG_2_AAC_LOW_SAMPLING_FREQUENCY_0x73
= 0x14, MPEG_4_AAC_0x14
= 0x34, MPEG_4_AAC_0x34
= 0x54, MPEG_4_AAC_0x54
= 0x74, MPEG_4_AAC_0x74
= 0x15, ENHANCED_AC_3
= 0x16, MAT

